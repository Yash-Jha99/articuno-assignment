import { getSession } from "next-auth/react";
import Head from "next/head";
import { useRouter } from "next/router";
import { type GetServerSidePropsContext } from "next/types";
import React from "react";
import Layout from "~/components/Layout";
import PostForm, { type Post } from "~/components/post/PostForm";
import { prisma } from "~/server/db";
import { api } from "~/utils/api";

const EditPost = () => {
  const router = useRouter();
  const { id } = router.query;
  const { data, isLoading } = api.post.get.useQuery({ id: id as string });
  const editableData = {
    title: data?.title,
    content: data?.content,
  };
  const mutation = api.post.update.useMutation();
  const handleEdit = (data: Post) => {
    mutation.mutate({ id: id as string, ...data });
    void router.push("/post");
  };
  return (
    <>
      <Head>
        <title>Edit Post</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
          <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
            <h1 className="text-4xl font-bold tracking-tight text-white">
              Edit Post
            </h1>
            <div className="w-full rounded-xl bg-white/10 p-4 text-xl text-white sm:w-1/3">
              {isLoading ? (
                "Loading..."
              ) : (
                <PostForm data={editableData as Post} onSave={handleEdit} />
              )}
            </div>
          </div>
        </main>
      </Layout>
    </>
  );
};

export const getServerSideProps = async (ctx: GetServerSidePropsContext) => {
  const session = await getSession(ctx);
  const data = await prisma.post.findUnique({
    select: { userId: true },
    where: { id: ctx.query.id as string },
  });

  if (session?.user.id !== data?.userId) {
    const { res } = ctx;
    res.statusCode = 403;
    res.end("You are not allowed to visit this page");
  }

  return {
    props: {},
  };
};

export default EditPost;
