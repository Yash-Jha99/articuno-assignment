import { type NextPage } from "next";
import Head from "next/head";
import React, { useRef, useState } from "react";
import Layout from "~/components/Layout";
import Pagination from "~/components/general/Pagination";
import Post from "~/components/post/Post";
import PostSkeleton from "~/components/post/PostSkeleton";
import { api } from "~/utils/api";

const Posts: NextPage = () => {
  const pageRef = useRef<HTMLDivElement>(null);
  const [page, setPage] = useState(1);
  const { data, status } = api.post.getAll.useQuery({ page });
  const { count, data: posts } = data ?? {};

  return (
    <>
      <Head>
        <title>Posts</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
          <div
            ref={pageRef}
            className="container flex flex-col items-center justify-center gap-12 px-4 py-4 "
          >
            {status === "error" && (
              <div className="text-2xl text-white">
                Error in fetching data...
              </div>
            )}
            <div className="mt-20 grid grid-cols-1 gap-4 text-white sm:grid-cols-3 md:gap-8">
              {status === "loading"
                ? [1, 2, 3].map((item) => <PostSkeleton key={item} />)
                : posts?.map((post) => <Post key={post.id} {...post} />)}
            </div>
            <Pagination
              currentPage={page}
              onPageChange={(current) => {
                setPage(current);
                pageRef.current?.scrollTo({ top: 0, behavior: "smooth" });
              }}
              totalPages={Math.ceil((count || 0) / 10)}
            />
          </div>
        </main>
      </Layout>
    </>
  );
};

export default Posts;
